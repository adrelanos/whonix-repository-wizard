#!/usr/bin/python

from PyQt4 import QtCore, QtGui
from PyQt4.QtCore import qDebug
from subprocess import call
import os, inspect


class Whonix_repository_Wizard(QtGui.QWizard):
    def __init__(self):
        super(Whonix_repository_Wizard, self).__init__()
        self.setupUi()

    def setupUi(self):
        self.resize(455, 310)
        self.setWindowTitle('Whonix Repository wizard')
        icon = "/usr/share/icons/anon-icon-pack/whonix.ico"
        self.setWindowIcon(QtGui.QIcon(icon))

        self.pageEnable = QtGui.QWizardPage()
        self.enableText = QtGui.QLabel(self.pageEnable)
        self.enableText.setGeometry(QtCore.QRect(10, 10, 430, 150))
        self.enableText.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.enableText.setWordWrap(True)
        self.enableGroup = QtGui.QGroupBox(self.pageEnable)
        self.enableGroup.setGeometry(QtCore.QRect(10, 180, 430, 60))
        self.enableButton = QtGui.QRadioButton(self.enableGroup)
        self.enableButton.setGeometry(QtCore.QRect(30, 10, 400, 21))
        self.enableButton.setChecked(True)
        self.disableButton = QtGui.QRadioButton(self.enableGroup)
        self.disableButton.setGeometry(QtCore.QRect(30, 30, 300, 21))
        self.addPage(self.pageEnable)

        self.pageRepos = QtGui.QWizardPage()
        self.repoText = QtGui.QLabel(self.pageRepos)
        self.repoText.setGeometry(QtCore.QRect(10, 10, 430, 140))
        self.repoText.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.repoText.setWordWrap(True)
        self.repoGroup = QtGui.QGroupBox(self.pageRepos)
        self.repoGroup.setGeometry(QtCore.QRect(10, 150, 430, 90))
        self.repo1 = QtGui.QRadioButton(self.repoGroup)
        self.repo1.setGeometry(QtCore.QRect(30, 20, 300, 21))
        self.repo1.setChecked(True)
        self.repo2 = QtGui.QRadioButton(self.repoGroup)
        self.repo2.setGeometry(QtCore.QRect(30, 40, 300, 21))
        self.repo3 = QtGui.QRadioButton(self.repoGroup)
        self.repo3.setGeometry(QtCore.QRect(30, 60, 300, 21))
        self.addPage(self.pageRepos)

        self.pageFinish = QtGui.QWizardPage()
        self.finishText = QtGui.QLabel(self.pageFinish)
        self.finishText.setGeometry(QtCore.QRect(10, 10, 430, 140))
        self.finishText.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.finishText.setWordWrap(True)
        self.addPage(self.pageFinish)

        self.enableText.setText("""<p><B>Automatically install updates from the Whonix team?</B></p><p>\n
Whonix News (via whonixcheck) will notify you of available updates.</p>
<p>When you run</p><blockquote>sudo apt-get dist-upgrade</blockquote>
<p>updates from the Whonix team will be AUTOMATICALLY downloaded and installed,
along with updates from the Debian team. Please read <a href=https://www.whonix.org/wiki/Trust>https://www.whonix.org/wiki/Trust</a>
to understand the risks. </p>""")

        self.repoText.setText("""<p>Which Whonix Repository would you like to receive updates from?<p>
<p>Most users should select the Stable repository.</p>""")

        self.enableButton.setText("Yes. Automatically install updates from the Whonix team.")
        self.disableButton.setText("No. I will manually update from source code.")

        self.repoGroup.setTitle("Repository")
        self.repo1.setText("Whonix Stable Repository")
        self.repo2.setText("Whonix Testers Repository")
        self.repo3.setText("Whonix Developers Repository")

        self.fisnish_text_disabled = """<p>You will not received updates from the Whonix team.</p>
<p>You can always start the Whonix Repository Tool again by running</p>
<blockquote>Start Menu -> Applications -> System -> Whonix Repository.</blockquote>"""

        self.fisnish_text_enabled = """<p>Updates from the Whonix team will be automatically installed when you upgrade.</p>
<p>You can always start the Whonix Repository Tool again by running</p>
<blockquote>Start Menu -> Applications -> System -> Whonix Repository.</blockquote>"""

        # The event handler checks the wizard nextId() several times for the same page.
        # Send command once only.
        self.oneShot = True

        self.button(QtGui.QWizard.BackButton).clicked.connect(self.BackButton_clicked)

        self.exec_()

    # re-arm command.
    def BackButton_clicked(self):
        if not self.oneShot:
            self.oneShot = True

    # overload QWizard.nextId()
    def nextId(self):
        if self.currentId() < 2:
            if self.enableButton.isChecked():
                return self.currentId() + 1
            elif self.disableButton.isChecked():
                if self.oneShot:
                    command = 'whonix_repository --disable'
                    exit_code = call(command, shell=True)
                    self.finishText.setText(self.fisnish_text_disabled)
                    mypath = inspect.getfile(inspect.currentframe())
                    print "INFO %s: Ok, exit code of \"%s\" was %s." % ( mypath, command, exit_code )
                    self.oneShot = False
                return self.currentId() + 2
        elif self.currentId() == 2:
            if self.repo1.isChecked():
                codename = ' --codename stable'
            elif self.repo2.isChecked():
                codename = ' --codename testers'
            elif self.repo3.isChecked():
                codename = ' --codename developers'
            if self.oneShot:
                command = 'whonix_repository --enable' + codename
                exit_code = call(command, shell=True)
                self.finishText.setText(self.fisnish_text_enabled)
                mypath = inspect.getfile(inspect.currentframe())
                print "INFO %s: Ok, exit code of \"%s\" was %s." % ( mypath, command, exit_code )
                self.oneShot = False
            return -1
        else:
            return -1


if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)

    if os.getuid() != 0:
        print 'ERROR: This must be run as root!'
        sys.exit(1)

    wizard = Whonix_repository_Wizard()

    sys.exit()
